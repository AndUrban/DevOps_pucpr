name: Java CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configura o Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Compila os arquivos Java
      run: |
        mkdir -p bin
        javac -d bin $(find src -name "*.java")

    - name: Cria o arquivo JAR
      run: |
        mkdir -p dist
        jar --create --file=dist/biblioteca-virtual.jar -C bin .

    - name: Faz upload do artefato (JAR)
      uses: actions/upload-artifact@v4
      with:
        name: biblioteca-virtual
        path: dist/biblioteca-virtual.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Baixa o artefato gerado
      uses: actions/download-artifact@v4
      with:
        name: biblioteca-virtual

    - name: Simula o deploy
      run: echo "Deploy realizado com sucesso (simulado)"

  dockerize:
    runs-on: ubuntu-latest
    needs: build

  steps:
  - name: Checkout do código
    uses: actions/checkout@v4

  - name: Baixa o artefato gerado
    uses: actions/download-artifact@v4
    with:
      name: biblioteca-virtual

  - name: Configura o Docker
    run: |
      sudo apt-get update
      sudo apt-get remove -y containerd
      curl -fsSL https://get.docker.com -o get-docker.sh
      sudo sh get-docker.sh

  - name: Build da Imagem Docker
    run: |
      docker build -t my-java-app .
      
  - name: Logar no Docker Hub
    uses: docker/login-action@v2
    with:
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}

  - name: Push da Imagem Docker
    run: |
      docker tag my-java-app ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest
      docker push ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest